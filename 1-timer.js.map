{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet chosenDate, difference, intervalId;\nconst picker = document.querySelector('#datetime-picker');\nconst startButton = document.querySelector('[data-start]'); // Используем [data-start] для выбора кнопки\nconst daysElement = document.querySelector('[data-days]');\nconst hoursElement = document.querySelector('[data-hours]');\nconst minutesElement = document.querySelector('[data-minutes]');\nconst secondsElement = document.querySelector('[data-seconds]');\n\nstartButton.disabled = true;\n\nflatpickr(picker, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    chosenDate = selectedDates[0].getTime();\n    if (chosenDate < Date.now()) {\n      showError('Please choose a date in the future');\n      startButton.disabled = true;\n    } else {\n      difference = chosenDate - Date.now();\n      startButton.disabled = false;\n    }\n  }\n});\n\nstartButton.addEventListener('click', () => {\n  intervalId = setInterval(updateCountdown, 1000);\n  startButton.disabled = true;\n  picker.disabled = true;\n});\n\nfunction updateCountdown() {\n  if (difference <= 0) {\n    clearInterval(intervalId);\n    picker.disabled = false;\n    return;\n  }\n\n  const { days, hours, minutes, seconds } = convertMs(difference);\n  daysElement.textContent = addLeadingZero(days);\n  hoursElement.textContent = addLeadingZero(hours);\n  minutesElement.textContent = addLeadingZero(minutes);\n  secondsElement.textContent = addLeadingZero(seconds);\n\n  difference -= 1000;\n}\n\nfunction convertMs(ms) {\n  const second = 1000, minute = 60 * second, hour = 60 * minute, day = 24 * hour;\n  return {\n    days: Math.floor(ms / day),\n    hours: Math.floor((ms % day) / hour),\n    minutes: Math.floor((ms % hour) / minute),\n    seconds: Math.floor((ms % minute) / second),\n  };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction showError(message) {\n  iziToast.error({\n    message,\n    position: 'topRight',\n    timeout: 0,\n    backgroundColor: '#EF4040',\n    messageColor: '#FFFFFF',\n    close: true,\n  });\n}\n"],"names":["chosenDate","difference","intervalId","picker","startButton","daysElement","hoursElement","minutesElement","secondsElement","flatpickr","selectedDates","showError","updateCountdown","days","hours","minutes","seconds","convertMs","addLeadingZero","ms","value","message","iziToast"],"mappings":"+IAKA,IAAIA,EAAYC,EAAYC,EAC5B,MAAMC,EAAS,SAAS,cAAc,kBAAkB,EAClDC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAc,SAAS,cAAc,aAAa,EAClDC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAiB,SAAS,cAAc,gBAAgB,EACxDC,EAAiB,SAAS,cAAc,gBAAgB,EAE9DJ,EAAY,SAAW,GAEvBK,EAAUN,EAAQ,CAChB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQO,EAAe,CACrBV,EAAaU,EAAc,CAAC,EAAE,QAAO,EACjCV,EAAa,KAAK,OACpBW,EAAU,oCAAoC,EAC9CP,EAAY,SAAW,KAEvBH,EAAaD,EAAa,KAAK,MAC/BI,EAAY,SAAW,GAE1B,CACH,CAAC,EAEDA,EAAY,iBAAiB,QAAS,IAAM,CAC1CF,EAAa,YAAYU,EAAiB,GAAI,EAC9CR,EAAY,SAAW,GACvBD,EAAO,SAAW,EACpB,CAAC,EAED,SAASS,GAAkB,CACzB,GAAIX,GAAc,EAAG,CACnB,cAAcC,CAAU,EACxBC,EAAO,SAAW,GAClB,MACD,CAED,KAAM,CAAE,KAAAU,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUhB,CAAU,EAC9DI,EAAY,YAAca,EAAeL,CAAI,EAC7CP,EAAa,YAAcY,EAAeJ,CAAK,EAC/CP,EAAe,YAAcW,EAAeH,CAAO,EACnDP,EAAe,YAAcU,EAAeF,CAAO,EAEnDf,GAAc,GAChB,CAEA,SAASgB,EAAUE,EAAI,CAErB,MAAO,CACL,KAAM,KAAK,MAAMA,EAAK,KAAG,EACzB,MAAO,KAAK,MAAOA,EAAK,MAAO,IAAI,EACnC,QAAS,KAAK,MAAOA,EAAK,KAAQ,GAAM,EACxC,QAAS,KAAK,MAAOA,EAAK,IAAU,GAAM,CAC9C,CACA,CAEA,SAASD,EAAeE,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAAST,EAAUU,EAAS,CAC1BC,EAAS,MAAM,CACb,QAAAD,EACA,SAAU,WACV,QAAS,EACT,gBAAiB,UACjB,aAAc,UACd,MAAO,EACX,CAAG,CACH"}